"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var letterSpacingScale = {
  letterSpacing: {
    LetterSpacing0: {
      value: '0',
      attributes: {
        group: 'letterSpacing'
      }
    },
    LetterSpacing100: {
      value: '-0.003em',
      attributes: {
        group: 'letterSpacing'
      }
    },
    LetterSpacing200: {
      value: '-0.006em',
      attributes: {
        group: 'letterSpacing'
      }
    },
    LetterSpacing300: {
      value: '-0.008em',
      attributes: {
        group: 'letterSpacing'
      }
    },
    LetterSpacing400: {
      value: '-0.01em',
      attributes: {
        group: 'letterSpacing'
      }
    }
  }
};
var lineHeightScale = {
  lineHeight: {
    LineHeight1: {
      value: '1',
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight050: {
      value: 12,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight100: {
      value: 16,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight200: {
      value: 20,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight300: {
      value: 24,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight400: {
      value: 28,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight500: {
      value: 32,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight600: {
      value: 36,
      attributes: {
        group: 'lineHeight'
      }
    },
    LineHeight700: {
      value: 40,
      attributes: {
        group: 'lineHeight'
      }
    }
  }
};
var fontWeightScale = {
  fontWeight: {
    FontWeight400: {
      value: '400',
      attributes: {
        group: 'fontWeight'
      }
    },
    FontWeight500: {
      value: '500',
      attributes: {
        group: 'fontWeight'
      }
    },
    FontWeight600: {
      value: '600',
      attributes: {
        group: 'fontWeight'
      }
    },
    FontWeight700: {
      value: '700',
      attributes: {
        group: 'fontWeight'
      }
    }
  }
};
var fontFamilyPalette = {
  fontFamily: {
    FontFamilyCharlie: {
      value: 'Charlie Sans',
      attributes: {
        group: 'fontFamily'
      }
    },
    LegacyFontFamilyWebSans: {
      value: "-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif",
      attributes: {
        group: 'fontFamily'
      }
    },
    /**
     * @see https://infinnie.github.io/blog/2017/systemui.html
     * @see https://github.com/twbs/bootstrap/pull/22377
     * @see https://fonts.google.com/knowledge/glossary/system_font_web_safe_font
     */
    FontFamilyWebSans: {
      value: "ui-sans-serif, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif",
      attributes: {
        group: 'fontFamily'
      }
    },
    FontFamilyiOSSans: {
      value: 'SF Pro',
      attributes: {
        group: 'fontFamily'
      }
    },
    FontFamilyAndroidSans: {
      value: 'Roboto',
      attributes: {
        group: 'fontFamily'
      }
    },
    FontFamilyWebMono: {
      value: "ui-monospace, Menlo, \"Segoe UI Mono\", \"Ubuntu Mono\", monospace",
      attributes: {
        group: 'fontFamily'
      }
    },
    FontFamilyiOSMono: {
      value: 'SF Mono',
      attributes: {
        group: 'fontFamily'
      }
    },
    FontFamilyAndroidMono: {
      value: 'Roboto Mono',
      attributes: {
        group: 'fontFamily'
      }
    }
  }
};
var fontSizeScale = {
  fontSize: {
    FontSizeCode: {
      value: '0.875em',
      attributes: {
        group: 'fontSize'
      }
    },
    LegacyFontSize11: {
      value: 11,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize12: {
      value: 12,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize14: {
      value: 14,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize16: {
      value: 16,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize20: {
      value: 20,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize24: {
      value: 24,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize28: {
      value: 28,
      attributes: {
        group: 'fontSize'
      }
    },
    LegacyFontSize29: {
      value: 29,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize32: {
      value: 32,
      attributes: {
        group: 'fontSize'
      }
    },
    LegacyFontSize35: {
      value: 35,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize36: {
      value: 36,
      attributes: {
        group: 'fontSize'
      }
    },
    FontSize48: {
      value: 48,
      attributes: {
        group: 'fontSize'
      }
    }
  }
};
var typographyPalette = {
  typography: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, fontSizeScale), fontWeightScale), fontFamilyPalette), lineHeightScale), letterSpacingScale)
};
var _default = exports.default = typographyPalette;