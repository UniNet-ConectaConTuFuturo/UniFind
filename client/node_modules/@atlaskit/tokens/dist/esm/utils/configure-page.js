import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import getThemeHtmlAttrs from '../get-theme-html-attrs';
import ColorModeObserver from './color-mode-listeners';

/**
 * Given ThemeState, sets appropriate html attributes on the documentElement,
 * adds a listener to keep colorMode updated, and returns a function to unbind.
 */
export default function configurePage(themeState) {
  if (themeState.colorMode === 'auto') {
    // Set colorMode based on the user preference
    themeState.colorMode = ColorModeObserver.getColorMode();
    // Bind a listener (if one doesn't already exist) to keep colorMode updated
    ColorModeObserver.bind();
  } else {
    ColorModeObserver.unbind();
  }
  var themeAttributes = getThemeHtmlAttrs(themeState);
  Object.entries(themeAttributes).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    document.documentElement.setAttribute(key, value);
  });
  return function () {
    return ColorModeObserver.unbind;
  };
}