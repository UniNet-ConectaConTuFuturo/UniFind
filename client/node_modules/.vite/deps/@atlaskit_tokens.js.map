{
  "version": 3,
  "sources": ["../../@babel/runtime/helpers/typeof.js", "../../@babel/runtime/helpers/regeneratorRuntime.js", "../../@babel/runtime/regenerator/index.js", "../../@atlaskit/tokens/dist/esm/get-token.js", "../../@atlaskit/tokens/dist/esm/get-token-value.js", "../../@babel/runtime/helpers/esm/asyncToGenerator.js", "../../@atlaskit/tokens/dist/esm/set-global-theme.js", "../../@atlaskit/tokens/dist/esm/theme-state-transformer.js", "../../@atlaskit/tokens/dist/esm/get-theme-html-attrs.js", "../../@atlaskit/tokens/dist/esm/utils/color-mode-listeners.js", "../../@atlaskit/tokens/dist/esm/utils/theme-loading.js", "../../@atlaskit/tokens/dist/esm/artifacts/theme-import-map.js", "../../@atlaskit/tokens/dist/esm/utils/configure-page.js", "../../@atlaskit/platform-feature-flags/dist/esm/debug.js", "../../@atlaskit/platform-feature-flags/dist/esm/resolvers.js", "../../@atlaskit/platform-feature-flags/dist/esm/index.js", "../../@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js", "../../@atlaskit/tokens/dist/esm/enable-global-theme.js", "../../@atlaskit/tokens/dist/esm/get-theme-styles.js", "../../@atlaskit/tokens/dist/esm/get-ssr-auto-script.js", "../../@atlaskit/tokens/dist/esm/use-theme-observer.js", "../../@atlaskit/tokens/dist/esm/get-global-theme.js", "../../@atlaskit/tokens/dist/esm/theme-mutation-observer.js"],
  "sourcesContent": ["function _typeof(o) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\r\n    return typeof o;\r\n  } : function (o) {\r\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\r\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\r\n}\r\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var _typeof = require(\"./typeof.js\")[\"default\"];\r\nfunction _regeneratorRuntime() {\r\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\r\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\r\n    return e;\r\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\r\n  var t,\r\n    e = {},\r\n    r = Object.prototype,\r\n    n = r.hasOwnProperty,\r\n    o = Object.defineProperty || function (t, e, r) {\r\n      t[e] = r.value;\r\n    },\r\n    i = \"function\" == typeof Symbol ? Symbol : {},\r\n    a = i.iterator || \"@@iterator\",\r\n    c = i.asyncIterator || \"@@asyncIterator\",\r\n    u = i.toStringTag || \"@@toStringTag\";\r\n  function define(t, e, r) {\r\n    return Object.defineProperty(t, e, {\r\n      value: r,\r\n      enumerable: !0,\r\n      configurable: !0,\r\n      writable: !0\r\n    }), t[e];\r\n  }\r\n  try {\r\n    define({}, \"\");\r\n  } catch (t) {\r\n    define = function define(t, e, r) {\r\n      return t[e] = r;\r\n    };\r\n  }\r\n  function wrap(t, e, r, n) {\r\n    var i = e && e.prototype instanceof Generator ? e : Generator,\r\n      a = Object.create(i.prototype),\r\n      c = new Context(n || []);\r\n    return o(a, \"_invoke\", {\r\n      value: makeInvokeMethod(t, r, c)\r\n    }), a;\r\n  }\r\n  function tryCatch(t, e, r) {\r\n    try {\r\n      return {\r\n        type: \"normal\",\r\n        arg: t.call(e, r)\r\n      };\r\n    } catch (t) {\r\n      return {\r\n        type: \"throw\",\r\n        arg: t\r\n      };\r\n    }\r\n  }\r\n  e.wrap = wrap;\r\n  var h = \"suspendedStart\",\r\n    l = \"suspendedYield\",\r\n    f = \"executing\",\r\n    s = \"completed\",\r\n    y = {};\r\n  function Generator() {}\r\n  function GeneratorFunction() {}\r\n  function GeneratorFunctionPrototype() {}\r\n  var p = {};\r\n  define(p, a, function () {\r\n    return this;\r\n  });\r\n  var d = Object.getPrototypeOf,\r\n    v = d && d(d(values([])));\r\n  v && v !== r && n.call(v, a) && (p = v);\r\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\r\n  function defineIteratorMethods(t) {\r\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\r\n      define(t, e, function (t) {\r\n        return this._invoke(e, t);\r\n      });\r\n    });\r\n  }\r\n  function AsyncIterator(t, e) {\r\n    function invoke(r, o, i, a) {\r\n      var c = tryCatch(t[r], t, o);\r\n      if (\"throw\" !== c.type) {\r\n        var u = c.arg,\r\n          h = u.value;\r\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\r\n          invoke(\"next\", t, i, a);\r\n        }, function (t) {\r\n          invoke(\"throw\", t, i, a);\r\n        }) : e.resolve(h).then(function (t) {\r\n          u.value = t, i(u);\r\n        }, function (t) {\r\n          return invoke(\"throw\", t, i, a);\r\n        });\r\n      }\r\n      a(c.arg);\r\n    }\r\n    var r;\r\n    o(this, \"_invoke\", {\r\n      value: function value(t, n) {\r\n        function callInvokeWithMethodAndArg() {\r\n          return new e(function (e, r) {\r\n            invoke(t, n, e, r);\r\n          });\r\n        }\r\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\r\n      }\r\n    });\r\n  }\r\n  function makeInvokeMethod(e, r, n) {\r\n    var o = h;\r\n    return function (i, a) {\r\n      if (o === f) throw new Error(\"Generator is already running\");\r\n      if (o === s) {\r\n        if (\"throw\" === i) throw a;\r\n        return {\r\n          value: t,\r\n          done: !0\r\n        };\r\n      }\r\n      for (n.method = i, n.arg = a;;) {\r\n        var c = n.delegate;\r\n        if (c) {\r\n          var u = maybeInvokeDelegate(c, n);\r\n          if (u) {\r\n            if (u === y) continue;\r\n            return u;\r\n          }\r\n        }\r\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\r\n          if (o === h) throw o = s, n.arg;\r\n          n.dispatchException(n.arg);\r\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\r\n        o = f;\r\n        var p = tryCatch(e, r, n);\r\n        if (\"normal\" === p.type) {\r\n          if (o = n.done ? s : l, p.arg === y) continue;\r\n          return {\r\n            value: p.arg,\r\n            done: n.done\r\n          };\r\n        }\r\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\r\n      }\r\n    };\r\n  }\r\n  function maybeInvokeDelegate(e, r) {\r\n    var n = r.method,\r\n      o = e.iterator[n];\r\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\r\n    var i = tryCatch(o, e.iterator, r.arg);\r\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\r\n    var a = i.arg;\r\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\r\n  }\r\n  function pushTryEntry(t) {\r\n    var e = {\r\n      tryLoc: t[0]\r\n    };\r\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\r\n  }\r\n  function resetTryEntry(t) {\r\n    var e = t.completion || {};\r\n    e.type = \"normal\", delete e.arg, t.completion = e;\r\n  }\r\n  function Context(t) {\r\n    this.tryEntries = [{\r\n      tryLoc: \"root\"\r\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\r\n  }\r\n  function values(e) {\r\n    if (e || \"\" === e) {\r\n      var r = e[a];\r\n      if (r) return r.call(e);\r\n      if (\"function\" == typeof e.next) return e;\r\n      if (!isNaN(e.length)) {\r\n        var o = -1,\r\n          i = function next() {\r\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\r\n            return next.value = t, next.done = !0, next;\r\n          };\r\n        return i.next = i;\r\n      }\r\n    }\r\n    throw new TypeError(_typeof(e) + \" is not iterable\");\r\n  }\r\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\r\n    value: GeneratorFunctionPrototype,\r\n    configurable: !0\r\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\r\n    value: GeneratorFunction,\r\n    configurable: !0\r\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\r\n    var e = \"function\" == typeof t && t.constructor;\r\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\r\n  }, e.mark = function (t) {\r\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\r\n  }, e.awrap = function (t) {\r\n    return {\r\n      __await: t\r\n    };\r\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\r\n    return this;\r\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\r\n    void 0 === i && (i = Promise);\r\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\r\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\r\n      return t.done ? t.value : a.next();\r\n    });\r\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\r\n    return this;\r\n  }), define(g, \"toString\", function () {\r\n    return \"[object Generator]\";\r\n  }), e.keys = function (t) {\r\n    var e = Object(t),\r\n      r = [];\r\n    for (var n in e) r.push(n);\r\n    return r.reverse(), function next() {\r\n      for (; r.length;) {\r\n        var t = r.pop();\r\n        if (t in e) return next.value = t, next.done = !1, next;\r\n      }\r\n      return next.done = !0, next;\r\n    };\r\n  }, e.values = values, Context.prototype = {\r\n    constructor: Context,\r\n    reset: function reset(e) {\r\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\r\n    },\r\n    stop: function stop() {\r\n      this.done = !0;\r\n      var t = this.tryEntries[0].completion;\r\n      if (\"throw\" === t.type) throw t.arg;\r\n      return this.rval;\r\n    },\r\n    dispatchException: function dispatchException(e) {\r\n      if (this.done) throw e;\r\n      var r = this;\r\n      function handle(n, o) {\r\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\r\n      }\r\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\r\n        var i = this.tryEntries[o],\r\n          a = i.completion;\r\n        if (\"root\" === i.tryLoc) return handle(\"end\");\r\n        if (i.tryLoc <= this.prev) {\r\n          var c = n.call(i, \"catchLoc\"),\r\n            u = n.call(i, \"finallyLoc\");\r\n          if (c && u) {\r\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\r\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\r\n          } else if (c) {\r\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\r\n          } else {\r\n            if (!u) throw new Error(\"try statement without catch or finally\");\r\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    abrupt: function abrupt(t, e) {\r\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\r\n        var o = this.tryEntries[r];\r\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\r\n          var i = o;\r\n          break;\r\n        }\r\n      }\r\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\r\n      var a = i ? i.completion : {};\r\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\r\n    },\r\n    complete: function complete(t, e) {\r\n      if (\"throw\" === t.type) throw t.arg;\r\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\r\n    },\r\n    finish: function finish(t) {\r\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\r\n        var r = this.tryEntries[e];\r\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\r\n      }\r\n    },\r\n    \"catch\": function _catch(t) {\r\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\r\n        var r = this.tryEntries[e];\r\n        if (r.tryLoc === t) {\r\n          var n = r.completion;\r\n          if (\"throw\" === n.type) {\r\n            var o = n.arg;\r\n            resetTryEntry(r);\r\n          }\r\n          return o;\r\n        }\r\n      }\r\n      throw new Error(\"illegal catch attempt\");\r\n    },\r\n    delegateYield: function delegateYield(e, r, n) {\r\n      return this.delegate = {\r\n        iterator: values(e),\r\n        resultName: r,\r\n        nextLoc: n\r\n      }, \"next\" === this.method && (this.arg = t), y;\r\n    }\r\n  }, e;\r\n}\r\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "// TODO(Babel 8): Remove this file.\r\n\r\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\r\nmodule.exports = runtime;\r\n\r\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\r\ntry {\r\n  regeneratorRuntime = runtime;\r\n} catch (accidentalStrictMode) {\r\n  if (typeof globalThis === \"object\") {\r\n    globalThis.regeneratorRuntime = runtime;\r\n  } else {\r\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\r\n  }\r\n}\r\n", "import warnOnce from '@atlaskit/ds-lib/warn-once';\r\nimport tokens from './artifacts/token-names';\r\nimport { TOKEN_NOT_FOUND_CSS_VAR } from './constants';\r\nvar name = \"@atlaskit/tokens\";\r\nvar version = \"1.25.2\";\r\n/**\r\n * Takes a dot-separated token name and an optional fallback, and returns the CSS custom property for the corresponding token.\r\n * This should be used to implement design decisions throughout your application.\r\n *\r\n * Note: With `@atlaskit/babel-plugin-tokens`, this function can be pre-compiled and a fallback value automatically inserted.\r\n *\r\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\r\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\r\n *\r\n * @example\r\n * ```\r\n * <div\r\n *   css={{\r\n *     backgroundColor: token('elevation.surface.raised', N0),\r\n *     boxShadow: token('elevation.shadow.raised', `0 20px 32px -8px ${N50A}, 0 0 1px ${N60A}`),\r\n *     padding: token('spacing.scale.100', '8px'),\r\n *     fontWeight: token('font.weight.regular', '400'),\r\n *   }}\r\n * />\r\n * ```\r\n *\r\n */\r\nfunction token(path, fallback) {\r\n  var token = tokens[path];\r\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\r\n    warnOnce(\"Unknown token id at path: \".concat(path, \" for \").concat(name, \"@\").concat(version));\r\n  }\r\n\r\n  // if the token is not found - replacing it with variable name without any value, to avoid it being undefined which would result in invalid css\r\n  if (!token) {\r\n    token = TOKEN_NOT_FOUND_CSS_VAR;\r\n  }\r\n  var tokenCall = fallback ? \"var(\".concat(token, \", \").concat(fallback, \")\") : \"var(\".concat(token, \")\");\r\n  return tokenCall;\r\n}\r\nexport default token;", "import warnOnce from '@atlaskit/ds-lib/warn-once';\r\nimport tokens from './artifacts/token-names';\r\nvar name = \"@atlaskit/tokens\";\r\nvar version = \"1.25.2\";\r\n/**\r\n * Takes a dot-separated token name and and an optional fallback, and returns the current computed CSS value for the\r\n * resulting CSS Custom Property.\r\n * This should be used for when the CSS cascade isn't available, eg. `<canvas>` elements, JS charting libraries, etc.\r\n *\r\n * Note: these values change depending on the theme so consider pairing them with `useThemeObserver` in React, or the\r\n * `ThemeMutationObserver` class elsewhere.\r\n *\r\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\r\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\r\n *\r\n * @example\r\n * ```\r\n * const theme = useThemeObserver();\r\n *\r\n * useEffect(() => {\r\n *  const lineColor = getTokenValue('color.background.accent.blue.subtle', B400);\r\n * }, [theme]);\r\n * ```\r\n *\r\n */\r\nfunction getTokenValue(tokenId) {\r\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n  var token = tokens[tokenId];\r\n  var tokenValue = fallback;\r\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\r\n    warnOnce(\"Unknown token id at path: \".concat(tokenId, \" for \").concat(name, \"@\").concat(version));\r\n  }\r\n  if (typeof window === 'undefined') {\r\n    return tokenValue;\r\n  }\r\n  tokenValue = window.getComputedStyle(document.documentElement).getPropertyValue(token).trim();\r\n  tokenValue = tokenValue || fallback;\r\n  return tokenValue;\r\n}\r\nexport default getTokenValue;", "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\r\n  try {\r\n    var info = gen[key](arg);\r\n    var value = info.value;\r\n  } catch (error) {\r\n    reject(error);\r\n    return;\r\n  }\r\n  if (info.done) {\r\n    resolve(value);\r\n  } else {\r\n    Promise.resolve(value).then(_next, _throw);\r\n  }\r\n}\r\nexport default function _asyncToGenerator(fn) {\r\n  return function () {\r\n    var self = this,\r\n      args = arguments;\r\n    return new Promise(function (resolve, reject) {\r\n      var gen = fn.apply(self, args);\r\n      function _next(value) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\r\n      }\r\n      function _throw(err) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\r\n      }\r\n      _next(undefined);\r\n    });\r\n  };\r\n}", "import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\r\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\r\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\r\nimport { themeStateDefaults } from './theme-config';\r\nimport { isValidBrandHex } from './utils/color-utils';\r\nimport configurePage from './utils/configure-page';\r\nimport { findMissingCustomStyleElements } from './utils/custom-theme-loading-utils';\r\nimport { getThemeOverridePreferences, getThemePreferences } from './utils/get-theme-preferences';\r\nimport { loadAndAppendThemeCss } from './utils/theme-loading';\r\n\r\n/**\r\n * Sets the theme globally at runtime. This updates the `data-theme` and `data-color-mode` attributes on your page's <html> tag.\r\n *\r\n * @param {Object<string, string>} themeState The themes and color mode that should be applied.\r\n * @param {string} themeState.colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\r\n * @param {string} themeState.dark The color theme to be applied when the color mode resolves to 'dark'.\r\n * @param {string} themeState.light The color theme to be applied when the color mode resolves to 'light'.\r\n * @param {string} themeState.shape The shape theme to be applied.\r\n * @param {string} themeState.spacing The spacing theme to be applied.\r\n * @param {string} themeState.typography The typography theme to be applied.\r\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\r\n * @param {function} themeLoader Callback function used to override the default theme loading functionality.\r\n *\r\n * @returns A Promise of an unbind function, that can be used to stop listening for changes to system theme.\r\n *\r\n * @example\r\n * ```\r\n * setGlobalTheme({colorMode: 'auto', light: 'light', dark: 'dark', spacing: 'spacing'});\r\n * ```\r\n */\r\nvar setGlobalTheme = /*#__PURE__*/function () {\r\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\r\n    var _ref2,\r\n      _ref2$colorMode,\r\n      colorMode,\r\n      _ref2$dark,\r\n      dark,\r\n      _ref2$light,\r\n      light,\r\n      _ref2$shape,\r\n      shape,\r\n      _ref2$spacing,\r\n      spacing,\r\n      _ref2$typography,\r\n      typography,\r\n      _ref2$UNSAFE_themeOpt,\r\n      UNSAFE_themeOptions,\r\n      themeLoader,\r\n      themeState,\r\n      themePreferences,\r\n      loadingStrategy,\r\n      loadingTasks,\r\n      mode,\r\n      attrOfMissingCustomStyles,\r\n      themeOverridePreferences,\r\n      _iterator,\r\n      _step,\r\n      themeId,\r\n      autoUnbind,\r\n      _args3 = arguments;\r\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\r\n      while (1) switch (_context3.prev = _context3.next) {\r\n        case 0:\r\n          _ref2 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, _ref2$colorMode = _ref2.colorMode, colorMode = _ref2$colorMode === void 0 ? themeStateDefaults['colorMode'] : _ref2$colorMode, _ref2$dark = _ref2.dark, dark = _ref2$dark === void 0 ? themeStateDefaults['dark'] : _ref2$dark, _ref2$light = _ref2.light, light = _ref2$light === void 0 ? themeStateDefaults['light'] : _ref2$light, _ref2$shape = _ref2.shape, shape = _ref2$shape === void 0 ? themeStateDefaults['shape'] : _ref2$shape, _ref2$spacing = _ref2.spacing, spacing = _ref2$spacing === void 0 ? themeStateDefaults['spacing'] : _ref2$spacing, _ref2$typography = _ref2.typography, typography = _ref2$typography === void 0 ? themeStateDefaults['typography'] : _ref2$typography, _ref2$UNSAFE_themeOpt = _ref2.UNSAFE_themeOptions, UNSAFE_themeOptions = _ref2$UNSAFE_themeOpt === void 0 ? themeStateDefaults['UNSAFE_themeOptions'] : _ref2$UNSAFE_themeOpt;\r\n          themeLoader = _args3.length > 1 ? _args3[1] : undefined;\r\n          themeState = {\r\n            colorMode: colorMode,\r\n            dark: dark,\r\n            light: light,\r\n            shape: shape,\r\n            spacing: spacing,\r\n            typography: typography,\r\n            UNSAFE_themeOptions: themeLoader ? undefined : UNSAFE_themeOptions\r\n          }; // Determine what to load and loading strategy\r\n          themePreferences = getThemePreferences(themeState);\r\n          loadingStrategy = themeLoader ? themeLoader : loadAndAppendThemeCss; // Load standard themes\r\n          loadingTasks = themePreferences.map( /*#__PURE__*/function () {\r\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(themeId) {\r\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\r\n                while (1) switch (_context.prev = _context.next) {\r\n                  case 0:\r\n                    _context.next = 2;\r\n                    return loadingStrategy(themeId);\r\n                  case 2:\r\n                    return _context.abrupt(\"return\", _context.sent);\r\n                  case 3:\r\n                  case \"end\":\r\n                    return _context.stop();\r\n                }\r\n              }, _callee);\r\n            }));\r\n            return function (_x) {\r\n              return _ref3.apply(this, arguments);\r\n            };\r\n          }()); // Load custom themes if needed\r\n          if (!themeLoader && UNSAFE_themeOptions && isValidBrandHex(UNSAFE_themeOptions === null || UNSAFE_themeOptions === void 0 ? void 0 : UNSAFE_themeOptions.brandColor)) {\r\n            mode = colorMode || themeStateDefaults['colorMode'];\r\n            attrOfMissingCustomStyles = findMissingCustomStyleElements(UNSAFE_themeOptions, mode);\r\n            if (attrOfMissingCustomStyles.length > 0) {\r\n              // Load custom theme styles\r\n              loadingTasks.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\r\n                var _yield$import, loadAndAppendCustomThemeCss;\r\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\r\n                  while (1) switch (_context2.prev = _context2.next) {\r\n                    case 0:\r\n                      _context2.next = 2;\r\n                      return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-custom-theme\" */\r\n                      './custom-theme');\r\n                    case 2:\r\n                      _yield$import = _context2.sent;\r\n                      loadAndAppendCustomThemeCss = _yield$import.loadAndAppendCustomThemeCss;\r\n                      loadAndAppendCustomThemeCss({\r\n                        colorMode: attrOfMissingCustomStyles.length === 2 ? 'auto' :\r\n                        // only load the missing custom theme styles\r\n                        attrOfMissingCustomStyles[0],\r\n                        UNSAFE_themeOptions: UNSAFE_themeOptions\r\n                      });\r\n                    case 5:\r\n                    case \"end\":\r\n                      return _context2.stop();\r\n                  }\r\n                }, _callee2);\r\n              }))());\r\n            }\r\n          }\r\n          _context3.next = 9;\r\n          return Promise.all(loadingTasks);\r\n        case 9:\r\n          // Load override themes after standard themes\r\n          themeOverridePreferences = getThemeOverridePreferences(themeState);\r\n          _iterator = _createForOfIteratorHelper(themeOverridePreferences);\r\n          _context3.prev = 11;\r\n          _iterator.s();\r\n        case 13:\r\n          if ((_step = _iterator.n()).done) {\r\n            _context3.next = 19;\r\n            break;\r\n          }\r\n          themeId = _step.value;\r\n          _context3.next = 17;\r\n          return loadingStrategy(themeId);\r\n        case 17:\r\n          _context3.next = 13;\r\n          break;\r\n        case 19:\r\n          _context3.next = 24;\r\n          break;\r\n        case 21:\r\n          _context3.prev = 21;\r\n          _context3.t0 = _context3[\"catch\"](11);\r\n          _iterator.e(_context3.t0);\r\n        case 24:\r\n          _context3.prev = 24;\r\n          _iterator.f();\r\n          return _context3.finish(24);\r\n        case 27:\r\n          autoUnbind = configurePage(themeState);\r\n          return _context3.abrupt(\"return\", autoUnbind);\r\n        case 29:\r\n        case \"end\":\r\n          return _context3.stop();\r\n      }\r\n    }, _callee3, null, [[11, 21, 24, 27]]);\r\n  }));\r\n  return function setGlobalTheme() {\r\n    return _ref.apply(this, arguments);\r\n  };\r\n}();\r\nexport default setGlobalTheme;", "import _typeof from \"@babel/runtime/helpers/typeof\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\r\nimport { themeIds } from './theme-config';\r\nvar themeKinds = ['light', 'dark', 'spacing', 'typography', 'shape'];\r\nvar customThemeOptions = 'UNSAFE_themeOptions';\r\nvar isThemeKind = function isThemeKind(themeKind) {\r\n  return themeKinds.find(function (kind) {\r\n    return kind === themeKind;\r\n  }) !== undefined;\r\n};\r\nvar isThemeIds = function isThemeIds(themeId) {\r\n  return themeIds.find(function (id) {\r\n    return id === themeId;\r\n  }) !== undefined;\r\n};\r\nvar isColorMode = function isColorMode(modeId) {\r\n  return ['light', 'dark', 'auto'].includes(modeId);\r\n};\r\n/**\r\n * Converts a string that is formatted for the `data-theme` HTML attribute\r\n * to an object that can be passed to `setGlobalTheme`.\r\n *\r\n * @param {string} themes The themes that should be applied.\r\n *\r\n * @example\r\n * ```\r\n * themeStringToObject('dark:dark light:legacy-light spacing:spacing');\r\n * // returns { dark: 'dark', light: 'legacy-light', spacing: 'spacing' }\r\n * ```\r\n */\r\nexport var themeStringToObject = function themeStringToObject(themeState) {\r\n  return themeState.split(' ').map(function (theme) {\r\n    return theme.split(/:([\\s\\S]*)/);\r\n  }).reduce(function (themeObject, _ref) {\r\n    var _ref2 = _slicedToArray(_ref, 2),\r\n      kind = _ref2[0],\r\n      id = _ref2[1];\r\n    if (kind === 'colorMode' && isColorMode(id)) {\r\n      themeObject[kind] = id;\r\n    }\r\n    if (isThemeKind(kind) && isThemeIds(id)) {\r\n      // @ts-expect-error FIXME - this is a valid ts error\r\n      themeObject[kind] = id;\r\n    }\r\n    if (kind === customThemeOptions) {\r\n      try {\r\n        themeObject[customThemeOptions] = JSON.parse(id);\r\n      } catch (e) {\r\n        new Error('Invalid custom theme string');\r\n      }\r\n    }\r\n    return themeObject;\r\n  }, {});\r\n};\r\n\r\n/**\r\n * Converts a theme object to a string formatted for the `data-theme` HTML attribute.\r\n *\r\n * @param {object} themes The themes that should be applied.\r\n *\r\n * @example\r\n * ```\r\n * themeObjectToString({ dark: 'dark', light: 'legacy-light', spacing: 'spacing' });\r\n * // returns 'dark:dark light:legacy-light spacing:spacing'\r\n * ```\r\n */\r\nexport var themeObjectToString = function themeObjectToString(themeState) {\r\n  return Object.entries(themeState).reduce(function (themeString, _ref3) {\r\n    var _ref4 = _slicedToArray(_ref3, 2),\r\n      kind = _ref4[0],\r\n      id = _ref4[1];\r\n    if (\r\n    // colorMode theme state\r\n    kind === 'colorMode' && typeof id === 'string' && isColorMode(id) ||\r\n    // custom theme state\r\n    kind === customThemeOptions && _typeof(id) === 'object' ||\r\n    // other theme states\r\n    isThemeKind(kind) && typeof id === 'string' && isThemeIds(id)) {\r\n      return themeString + \"\".concat(themeString ? ' ' : '') + \"\".concat(kind, \":\").concat(_typeof(id) === 'object' ? JSON.stringify(id) : id);\r\n    }\r\n    return themeString;\r\n  }, '');\r\n};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\r\nimport { COLOR_MODE_ATTRIBUTE, CUSTOM_THEME_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from './constants';\r\nimport { themeStateDefaults } from './theme-config';\r\nimport { themeObjectToString } from './theme-state-transformer';\r\nimport { isValidBrandHex } from './utils/color-utils';\r\nimport { hash } from './utils/hash';\r\nvar defaultColorMode = 'light';\r\n\r\n/**\r\n * Server-side rendering utility. Generates the valid HTML attributes for a given theme.\r\n * Note: this utility does not handle automatic theme switching.\r\n *\r\n * @param {Object<string, string>} themeOptions - Theme options object\r\n * @param {string} themeState.colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\r\n * @param {string} themeState.dark The color theme to be applied when the color mode resolves to 'dark'.\r\n * @param {string} themeState.light The color theme to be applied when the color mode resolves to 'light'.\r\n * @param {string} themeState.spacing The spacing theme to be applied.\r\n * @param {string} themeState.typography The typography theme to be applied.\r\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\r\n *\r\n * @returns {Object} Object of HTML attributes to be applied to the document root\r\n */\r\nvar getThemeHtmlAttrs = function getThemeHtmlAttrs() {\r\n  var _result;\r\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n    _ref$colorMode = _ref.colorMode,\r\n    colorMode = _ref$colorMode === void 0 ? themeStateDefaults['colorMode'] : _ref$colorMode,\r\n    _ref$dark = _ref.dark,\r\n    dark = _ref$dark === void 0 ? themeStateDefaults['dark'] : _ref$dark,\r\n    _ref$light = _ref.light,\r\n    light = _ref$light === void 0 ? themeStateDefaults['light'] : _ref$light,\r\n    _ref$shape = _ref.shape,\r\n    shape = _ref$shape === void 0 ? themeStateDefaults['shape'] : _ref$shape,\r\n    _ref$spacing = _ref.spacing,\r\n    spacing = _ref$spacing === void 0 ? themeStateDefaults['spacing'] : _ref$spacing,\r\n    _ref$typography = _ref.typography,\r\n    typography = _ref$typography === void 0 ? themeStateDefaults['typography'] : _ref$typography,\r\n    _ref$UNSAFE_themeOpti = _ref.UNSAFE_themeOptions,\r\n    UNSAFE_themeOptions = _ref$UNSAFE_themeOpti === void 0 ? themeStateDefaults['UNSAFE_themeOptions'] : _ref$UNSAFE_themeOpti;\r\n  var themeAttribute = themeObjectToString({\r\n    dark: dark,\r\n    light: light,\r\n    shape: shape,\r\n    spacing: spacing,\r\n    typography: typography\r\n  });\r\n  var result = (_result = {}, _defineProperty(_result, THEME_DATA_ATTRIBUTE, themeAttribute), _defineProperty(_result, COLOR_MODE_ATTRIBUTE, colorMode === 'auto' ? defaultColorMode : colorMode), _result);\r\n  if (UNSAFE_themeOptions && isValidBrandHex(UNSAFE_themeOptions.brandColor)) {\r\n    var optionString = JSON.stringify(UNSAFE_themeOptions);\r\n    var uniqueId = hash(optionString);\r\n    result[CUSTOM_THEME_ATTRIBUTE] = uniqueId;\r\n  }\r\n  return result;\r\n};\r\nexport default getThemeHtmlAttrs;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\r\nimport _createClass from \"@babel/runtime/helpers/createClass\";\r\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\r\nimport { bind as _bind } from 'bind-event-listener';\r\nimport { COLOR_MODE_ATTRIBUTE } from '../constants';\r\nimport { darkModeMediaQuery } from './theme-loading';\r\nvar isMatchMediaAvailable = typeof window !== 'undefined' && 'matchMedia' in window;\r\n\r\n/**\r\n * Updates the current theme when the system theme changes. Should be bound\r\n * to an event listener listening on the '(prefers-color-scheme: dark)' query\r\n * @param e The event representing a change in system theme.\r\n */\r\nfunction checkNativeListener(e) {\r\n  var element = document.documentElement;\r\n  element.setAttribute(COLOR_MODE_ATTRIBUTE, e.matches ? 'dark' : 'light');\r\n}\r\nvar darkModeMql = isMatchMediaAvailable && window.matchMedia(darkModeMediaQuery);\r\nvar ColorModeObserver = /*#__PURE__*/function () {\r\n  function ColorModeObserver() {\r\n    _classCallCheck(this, ColorModeObserver);\r\n    _defineProperty(this, \"unbindThemeChangeListener\", null);\r\n  }\r\n  _createClass(ColorModeObserver, [{\r\n    key: \"getColorMode\",\r\n    value: function getColorMode() {\r\n      if (!darkModeMql) {\r\n        return 'light';\r\n      }\r\n      return darkModeMql !== null && darkModeMql !== void 0 && darkModeMql.matches ? 'dark' : 'light';\r\n    }\r\n  }, {\r\n    key: \"bind\",\r\n    value: function bind() {\r\n      if (darkModeMql && this.unbindThemeChangeListener === null) {\r\n        this.unbindThemeChangeListener = _bind(darkModeMql, {\r\n          type: 'change',\r\n          listener: checkNativeListener\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"unbind\",\r\n    value: function unbind() {\r\n      if (this.unbindThemeChangeListener) {\r\n        this.unbindThemeChangeListener();\r\n        this.unbindThemeChangeListener = null;\r\n      }\r\n    }\r\n  }]);\r\n  return ColorModeObserver;\r\n}();\r\n/**\r\n * A singleton color mode observer - binds \"auto\" switching logic to a single `mediaQueryList` listener\r\n * that can be unbound by any consumer when no longer needed.\r\n */\r\nvar SingletonColorModeObserver = new ColorModeObserver();\r\nexport default SingletonColorModeObserver;", "import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\r\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\r\nimport themeImportMap from '../artifacts/theme-import-map';\r\nimport { CUSTOM_THEME_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from '../constants';\r\nexport var loadAndAppendThemeCss = /*#__PURE__*/function () {\r\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(themeId) {\r\n    var themeCss, style;\r\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\r\n      while (1) switch (_context.prev = _context.next) {\r\n        case 0:\r\n          if (!document.head.querySelector(\"style[\".concat(THEME_DATA_ATTRIBUTE, \"=\\\"\").concat(themeId, \"\\\"]:not([\").concat(CUSTOM_THEME_ATTRIBUTE, \"])\"))) {\r\n            _context.next = 2;\r\n            break;\r\n          }\r\n          return _context.abrupt(\"return\");\r\n        case 2:\r\n          _context.next = 4;\r\n          return loadThemeCss(themeId);\r\n        case 4:\r\n          themeCss = _context.sent;\r\n          style = document.createElement('style');\r\n          style.textContent = themeCss;\r\n          style.dataset.theme = themeId;\r\n          document.head.appendChild(style);\r\n        case 9:\r\n        case \"end\":\r\n          return _context.stop();\r\n      }\r\n    }, _callee);\r\n  }));\r\n  return function loadAndAppendThemeCss(_x) {\r\n    return _ref.apply(this, arguments);\r\n  };\r\n}();\r\nexport var loadThemeCss = /*#__PURE__*/function () {\r\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(themeId) {\r\n    var _yield$themeImportMap, themeCss;\r\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\r\n      while (1) switch (_context2.prev = _context2.next) {\r\n        case 0:\r\n          _context2.next = 2;\r\n          return themeImportMap[themeId]();\r\n        case 2:\r\n          _yield$themeImportMap = _context2.sent;\r\n          themeCss = _yield$themeImportMap.default;\r\n          return _context2.abrupt(\"return\", themeCss);\r\n        case 5:\r\n        case \"end\":\r\n          return _context2.stop();\r\n      }\r\n    }, _callee2);\r\n  }));\r\n  return function loadThemeCss(_x2) {\r\n    return _ref2.apply(this, arguments);\r\n  };\r\n}();\r\nexport var darkModeMediaQuery = '(prefers-color-scheme: dark)';", "/**\r\n * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}\r\n *\r\n * This file contains a dynamic import for each theme this package exports.\r\n * Themes are loaded asynchronously at runtime to minimise the amount of CSS we send to the client.\r\n * This allows users to compose their themes and only use the tokens that are requested.\r\n * When a new theme is created, the import should automatically be added to the map\r\n *\r\n * @codegen <<SignedSource::0a4de632442305b3d0e182eea97a1b24>>\r\n * @codegenCommand yarn build tokens\r\n */\r\n\r\nvar themeImportsMap = {\r\n  'light': function light() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-light\" */\r\n    './themes/atlassian-light');\r\n  },\r\n  'dark': function dark() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-dark\" */\r\n    './themes/atlassian-dark');\r\n  },\r\n  'legacy-light': function legacyLight() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-legacy-light\" */\r\n    './themes/atlassian-legacy-light');\r\n  },\r\n  'legacy-dark': function legacyDark() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-legacy-dark\" */\r\n    './themes/atlassian-legacy-dark');\r\n  },\r\n  'spacing': function spacing() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-spacing\" */\r\n    './themes/atlassian-spacing');\r\n  },\r\n  'typography-adg3': function typographyAdg3() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-typography-adg3\" */\r\n    './themes/atlassian-typography-adg3');\r\n  },\r\n  'shape': function shape() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-shape\" */\r\n    './themes/atlassian-shape');\r\n  },\r\n  'light-new-input-border': function lightNewInputBorder() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-light-new-input-border\" */\r\n    './themes/atlassian-light-new-input-border');\r\n  },\r\n  'dark-new-input-border': function darkNewInputBorder() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-dark-new-input-border\" */\r\n    './themes/atlassian-dark-new-input-border');\r\n  },\r\n  'light-saturated-palette-changes': function lightSaturatedPaletteChanges() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-light-saturated-palette-changes\" */\r\n    './themes/atlassian-light-saturated-palette-changes');\r\n  },\r\n  'dark-saturated-palette-changes': function darkSaturatedPaletteChanges() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-dark-saturated-palette-changes\" */\r\n    './themes/atlassian-dark-saturated-palette-changes');\r\n  },\r\n  'typography': function typography() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-typography\" */\r\n    './themes/atlassian-typography');\r\n  },\r\n  'typography-minor3': function typographyMinor3() {\r\n    return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-typography-minor3\" */\r\n    './themes/atlassian-typography-minor3');\r\n  }\r\n};\r\nexport default themeImportsMap;", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\r\nimport getThemeHtmlAttrs from '../get-theme-html-attrs';\r\nimport ColorModeObserver from './color-mode-listeners';\r\n\r\n/**\r\n * Given ThemeState, sets appropriate html attributes on the documentElement,\r\n * adds a listener to keep colorMode updated, and returns a function to unbind.\r\n */\r\nexport default function configurePage(themeState) {\r\n  if (themeState.colorMode === 'auto') {\r\n    // Set colorMode based on the user preference\r\n    themeState.colorMode = ColorModeObserver.getColorMode();\r\n    // Bind a listener (if one doesn't already exist) to keep colorMode updated\r\n    ColorModeObserver.bind();\r\n  } else {\r\n    ColorModeObserver.unbind();\r\n  }\r\n  var themeAttributes = getThemeHtmlAttrs(themeState);\r\n  Object.entries(themeAttributes).forEach(function (_ref) {\r\n    var _ref2 = _slicedToArray(_ref, 2),\r\n      key = _ref2[0],\r\n      value = _ref2[1];\r\n    document.documentElement.setAttribute(key, value);\r\n  });\r\n  return function () {\r\n    return ColorModeObserver.unbind;\r\n  };\r\n}", "var _ref, _globalThis$process, _globalThis$process$e, _globalThis$process2, _globalThis$process2$;\r\n// We can't rely on NODE_ENV === 'test' if its value is already configured by the consumer to some other value, so better to use JEST_WORKER_ID\r\n// https://jestjs.io/docs/environment-variables#jest_worker_id\r\nvar TESTS_MODE = (_ref = (globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$process = globalThis.process) === null || _globalThis$process === void 0 ? void 0 : (_globalThis$process$e = _globalThis$process.env) === null || _globalThis$process$e === void 0 ? void 0 : _globalThis$process$e.JEST_WORKER_ID) !== undefined) !== null && _ref !== void 0 ? _ref : false;\r\nvar DEBUG_MODE = !TESTS_MODE && (globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$process2 = globalThis.process) === null || _globalThis$process2 === void 0 ? void 0 : (_globalThis$process2$ = _globalThis$process2.env) === null || _globalThis$process2$ === void 0 ? void 0 : _globalThis$process2$.NODE_ENV) !== 'production';\r\nexport var debug = function debug() {\r\n  var _console;\r\n  if (!DEBUG_MODE) {\r\n    return;\r\n  }\r\n\r\n  // eslint-disable-next-line no-console\r\n  (_console = console).debug.apply(_console, arguments);\r\n};", "import { debug } from './debug';\r\nvar pkgName = '@atlaskit/platform-feature-flags';\r\nexport var PFF_GLOBAL_KEY = '__PLATFORM_FEATURE_FLAGS__';\r\nvar hasProcessEnv = typeof process !== 'undefined' && typeof process.env !== 'undefined';\r\n\r\n// FF global overrides can be configured by test runners or Storybook\r\nvar ENV_ENABLE_PLATFORM_FF = hasProcessEnv ?\r\n// Use global \"process\" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin\r\nprocess.env['ENABLE_PLATFORM_FF'] === 'true' : false;\r\n\r\n// STORYBOOK_ENABLE_PLATFORM_FF is included as storybook only allows env vars prefixed with STORYBOOK\r\n// https://github.com/storybookjs/storybook/issues/12270\r\n\r\nvar ENV_STORYBOOK_ENABLE_PLATFORM_FF = hasProcessEnv ?\r\n// Use global \"process\" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin\r\nprocess.env['STORYBOOK_ENABLE_PLATFORM_FF'] === 'true' : false;\r\nvar ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE = ENV_ENABLE_PLATFORM_FF || ENV_STORYBOOK_ENABLE_PLATFORM_FF;\r\nvar DEFAULT_PFF_GLOBAL = {\r\n  // In development mode we want to capture any feature flag checks that happen using the default resolver and log this result when the resolver is replaced.\r\n  // This is because evaluating feature flags when the resolver/FF client is loaded asynchronously could cause unexpected issues.\r\n  earlyResolvedFlags: new Map(),\r\n  booleanResolver: function booleanResolver(flagKey) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var unresolvedFlagCount = this.earlyResolvedFlags.get(flagKey) || 0;\r\n      this.earlyResolvedFlags.set(flagKey, unresolvedFlagCount + 1);\r\n    }\r\n    return false;\r\n  }\r\n};\r\nvar globalVar = typeof window !== 'undefined' ? window : globalThis;\r\nglobalVar[PFF_GLOBAL_KEY] = globalVar[PFF_GLOBAL_KEY] || DEFAULT_PFF_GLOBAL;\r\nexport function setBooleanResolver(resolver) {\r\n  globalVar[PFF_GLOBAL_KEY].booleanResolver = resolver;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    var _globalVar$PFF_GLOBAL, _globalVar$PFF_GLOBAL2;\r\n    if (((_globalVar$PFF_GLOBAL = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL === void 0 ? void 0 : (_globalVar$PFF_GLOBAL2 = _globalVar$PFF_GLOBAL.earlyResolvedFlags) === null || _globalVar$PFF_GLOBAL2 === void 0 ? void 0 : _globalVar$PFF_GLOBAL2.size) > 0) {\r\n      debug(\"[%s]: The following list of Feature Flags were called, the following number of times, before setBooleanResolver.\", pkgName, Array.from(globalVar[PFF_GLOBAL_KEY].earlyResolvedFlags.entries()));\r\n      globalVar[PFF_GLOBAL_KEY].earlyResolvedFlags.clear();\r\n    }\r\n  }\r\n}\r\nexport function resolveBooleanFlag(flagKey) {\r\n  if (ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE) {\r\n    debug('[%s]: The feature flags were enabled while running tests. The flag \"%s\" will be always enabled.', pkgName, flagKey);\r\n    return true;\r\n  }\r\n  try {\r\n    var _globalVar$PFF_GLOBAL3;\r\n    var result = (_globalVar$PFF_GLOBAL3 = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL3 === void 0 ? void 0 : _globalVar$PFF_GLOBAL3.booleanResolver(flagKey);\r\n    if (typeof result !== 'boolean') {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"\".concat(flagKey, \" resolved to a non-boolean value, returning false for safety\"));\r\n      return false;\r\n    }\r\n    return result;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}", "import { setBooleanResolver, resolveBooleanFlag } from './resolvers';\r\n\r\n/**\r\n * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's\r\n * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.\r\n *\r\n * @param flagResolver\r\n */\r\nexport function setBooleanFeatureFlagResolver(flagResolver) {\r\n  setBooleanResolver(flagResolver);\r\n}\r\n\r\n/**\r\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\r\n *\r\n * @param name\r\n */\r\nexport function getBooleanFF(name) {\r\n  return resolveBooleanFlag(name);\r\n}", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\r\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\r\nexport var getThemePreferences = function getThemePreferences(themeState) {\r\n  var colorMode = themeState.colorMode,\r\n    dark = themeState.dark,\r\n    light = themeState.light,\r\n    shape = themeState.shape,\r\n    spacing = themeState.spacing,\r\n    typography = themeState.typography;\r\n  var themePreferences = colorMode === 'auto' ? [light, dark] : [themeState[colorMode]];\r\n\r\n  // Replace light/dark theme with new palette if feature flag is on\r\n  if (getBooleanFF('platform.design-system-team.saturated-palette-changes_asoro')) {\r\n    // Iterate over themePreferences and swap out light/dark with new palette\r\n    themePreferences.forEach(function (themeId, index) {\r\n      if (themeId === 'light') {\r\n        themePreferences[index] = 'light-saturated-palette-changes';\r\n      }\r\n      if (themeId === 'dark') {\r\n        themePreferences[index] = 'dark-saturated-palette-changes';\r\n      }\r\n    });\r\n  }\r\n  [shape, spacing, typography].forEach(function (themeId) {\r\n    if (themeId) {\r\n      themePreferences.push(themeId);\r\n    }\r\n  });\r\n  return _toConsumableArray(new Set(themePreferences));\r\n};\r\nexport var getThemeOverridePreferences = function getThemeOverridePreferences(themeState) {\r\n  var colorMode = themeState.colorMode,\r\n    dark = themeState.dark,\r\n    light = themeState.light;\r\n  var themeOverridePreferences = [];\r\n  var themePreferences = colorMode === 'auto' ? [light, dark] : [themeState[colorMode]];\r\n  if (getBooleanFF('platform.design-system-team.border-checkbox_nyoiu')) {\r\n    themePreferences.includes('light') && themeOverridePreferences.push('light-new-input-border');\r\n    themePreferences.includes('dark') && themeOverridePreferences.push('dark-new-input-border');\r\n  }\r\n  return _toConsumableArray(new Set(themeOverridePreferences));\r\n};", "import { themeStateDefaults } from './theme-config';\r\nimport configurePage from './utils/configure-page';\r\nimport { getThemePreferences } from './utils/get-theme-preferences';\r\n\r\n/**\r\n * Synchronously sets the theme globally at runtime. Themes are not loaded;\r\n * use `getThemeStyles` and other server-side utilities to generate and load them.\r\n *\r\n * @param {Object<string, string>} themeState The themes and color mode that should be applied.\r\n * @param {string} themeState.colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\r\n * @param {string} themeState.dark The color theme to be applied when the color mode resolves to 'dark'.\r\n * @param {string} themeState.light The color theme to be applied when the color mode resolves to 'light'.\r\n * @param {string} themeState.shape The shape theme to be applied.\r\n * @param {string} themeState.spacing The spacing theme to be applied.\r\n * @param {string} themeState.typography The typography theme to be applied.\r\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\r\n * @param {function} themeLoader Callback function used to override the default theme loading functionality.\r\n *\r\n * @returns An unbind function, that can be used to stop listening for changes to system theme.\r\n *\r\n * @example\r\n * ```\r\n * enableGlobalTheme({colorMode: 'auto', light: 'light', dark: 'dark', spacing: 'spacing'});\r\n * ```\r\n */\r\nvar enableGlobalTheme = function enableGlobalTheme() {\r\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n    _ref$colorMode = _ref.colorMode,\r\n    colorMode = _ref$colorMode === void 0 ? themeStateDefaults['colorMode'] : _ref$colorMode,\r\n    _ref$dark = _ref.dark,\r\n    dark = _ref$dark === void 0 ? themeStateDefaults['dark'] : _ref$dark,\r\n    _ref$light = _ref.light,\r\n    light = _ref$light === void 0 ? themeStateDefaults['light'] : _ref$light,\r\n    _ref$shape = _ref.shape,\r\n    shape = _ref$shape === void 0 ? themeStateDefaults['shape'] : _ref$shape,\r\n    _ref$spacing = _ref.spacing,\r\n    spacing = _ref$spacing === void 0 ? themeStateDefaults['spacing'] : _ref$spacing,\r\n    _ref$typography = _ref.typography,\r\n    typography = _ref$typography === void 0 ? themeStateDefaults['typography'] : _ref$typography,\r\n    _ref$UNSAFE_themeOpti = _ref.UNSAFE_themeOptions,\r\n    UNSAFE_themeOptions = _ref$UNSAFE_themeOpti === void 0 ? themeStateDefaults['UNSAFE_themeOptions'] : _ref$UNSAFE_themeOpti;\r\n  var themeLoader = arguments.length > 1 ? arguments[1] : undefined;\r\n  var themeState = {\r\n    colorMode: colorMode,\r\n    dark: dark,\r\n    light: light,\r\n    shape: shape,\r\n    spacing: spacing,\r\n    typography: typography,\r\n    UNSAFE_themeOptions: themeLoader ? undefined : UNSAFE_themeOptions\r\n  };\r\n\r\n  // Determine what to load and call theme loader\r\n  var themePreferences = getThemePreferences(themeState);\r\n  if (themeLoader) {\r\n    themePreferences.map(function (themeId) {\r\n      return themeLoader(themeId);\r\n    });\r\n  }\r\n  var autoUnbind = configurePage(themeState);\r\n  return autoUnbind;\r\n};\r\nexport default enableGlobalTheme;", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\r\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\r\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\r\nimport { themeIdsWithOverrides, themeStateDefaults } from './theme-config';\r\nimport { isValidBrandHex } from './utils/color-utils';\r\nimport { getThemeOverridePreferences, getThemePreferences } from './utils/get-theme-preferences';\r\nimport { loadThemeCss } from './utils/theme-loading';\r\n/**\r\n * Takes an object containing theme preferences, and returns an array of objects for use in applying styles to the document head.\r\n * Only supplies the color themes necessary for initial render, based on the current themeState. I.e. if in light mode, dark mode themes are not returned.\r\n *\r\n * @param {Object<string, string>} themeState The themes and color mode that should be applied.\r\n * @param {string} themeState.colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\r\n * @param {string} themeState.dark The color theme to be applied when the color mode resolves to 'dark'.\r\n * @param {string} themeState.light The color theme to be applied when the color mode resolves to 'light'.\r\n * @param {string} themeState.shape The shape theme to be applied.\r\n * @param {string} themeState.spacing The spacing theme to be applied.\r\n * @param {string} themeState.typography The typography theme to be applied.\r\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\r\n *\r\n * @returns A Promise of an object array, containing theme IDs, data-attributes to attach to the theme, and the theme CSS.\r\n * If an error is encountered while loading themes, the themes array will be empty.\r\n */\r\nvar getThemeStyles = /*#__PURE__*/function () {\r\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(preferences) {\r\n    var themePreferences, themeOverridePreferences, themeState, results;\r\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\r\n      while (1) switch (_context3.prev = _context3.next) {\r\n        case 0:\r\n          themeOverridePreferences = [];\r\n          if (preferences === 'all') {\r\n            themePreferences = themeIdsWithOverrides;\r\n          } else {\r\n            themeState = {\r\n              colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults['colorMode'],\r\n              dark: (preferences === null || preferences === void 0 ? void 0 : preferences.dark) || themeStateDefaults['dark'],\r\n              light: (preferences === null || preferences === void 0 ? void 0 : preferences.light) || themeStateDefaults['light'],\r\n              shape: (preferences === null || preferences === void 0 ? void 0 : preferences.shape) || themeStateDefaults['shape'],\r\n              spacing: (preferences === null || preferences === void 0 ? void 0 : preferences.spacing) || themeStateDefaults['spacing'],\r\n              typography: (preferences === null || preferences === void 0 ? void 0 : preferences.typography) || themeStateDefaults['typography']\r\n            };\r\n            themePreferences = getThemePreferences(themeState);\r\n            themeOverridePreferences = getThemeOverridePreferences(themeState);\r\n          }\r\n          _context3.next = 4;\r\n          return Promise.all([].concat(_toConsumableArray([].concat(_toConsumableArray(themePreferences), _toConsumableArray(themeOverridePreferences)).map( /*#__PURE__*/function () {\r\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(themeId) {\r\n              var css;\r\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\r\n                while (1) switch (_context.prev = _context.next) {\r\n                  case 0:\r\n                    _context.prev = 0;\r\n                    _context.next = 3;\r\n                    return loadThemeCss(themeId);\r\n                  case 3:\r\n                    css = _context.sent;\r\n                    return _context.abrupt(\"return\", {\r\n                      id: themeId,\r\n                      attrs: {\r\n                        'data-theme': themeId\r\n                      },\r\n                      css: css\r\n                    });\r\n                  case 7:\r\n                    _context.prev = 7;\r\n                    _context.t0 = _context[\"catch\"](0);\r\n                    return _context.abrupt(\"return\", undefined);\r\n                  case 10:\r\n                  case \"end\":\r\n                    return _context.stop();\r\n                }\r\n              }, _callee, null, [[0, 7]]);\r\n            }));\r\n            return function (_x2) {\r\n              return _ref2.apply(this, arguments);\r\n            };\r\n          }())), [\r\n          // Add custom themes if they're present\r\n          _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\r\n            var _preferences$UNSAFE_t;\r\n            var _yield$import, getCustomThemeStyles, customThemeStyles;\r\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\r\n              while (1) switch (_context2.prev = _context2.next) {\r\n                case 0:\r\n                  if (!(preferences !== 'all' && preferences !== null && preferences !== void 0 && preferences.UNSAFE_themeOptions && isValidBrandHex(preferences === null || preferences === void 0 || (_preferences$UNSAFE_t = preferences.UNSAFE_themeOptions) === null || _preferences$UNSAFE_t === void 0 ? void 0 : _preferences$UNSAFE_t.brandColor))) {\r\n                    _context2.next = 15;\r\n                    break;\r\n                  }\r\n                  _context2.prev = 1;\r\n                  _context2.next = 4;\r\n                  return import( /* webpackChunkName: \"@atlaskit-internal_atlassian-custom-theme\" */\r\n                  './custom-theme');\r\n                case 4:\r\n                  _yield$import = _context2.sent;\r\n                  getCustomThemeStyles = _yield$import.getCustomThemeStyles;\r\n                  _context2.next = 8;\r\n                  return getCustomThemeStyles({\r\n                    colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults['colorMode'],\r\n                    UNSAFE_themeOptions: preferences === null || preferences === void 0 ? void 0 : preferences.UNSAFE_themeOptions\r\n                  });\r\n                case 8:\r\n                  customThemeStyles = _context2.sent;\r\n                  return _context2.abrupt(\"return\", customThemeStyles);\r\n                case 12:\r\n                  _context2.prev = 12;\r\n                  _context2.t0 = _context2[\"catch\"](1);\r\n                  return _context2.abrupt(\"return\", undefined);\r\n                case 15:\r\n                case \"end\":\r\n                  return _context2.stop();\r\n              }\r\n            }, _callee2, null, [[1, 12]]);\r\n          }))()]));\r\n        case 4:\r\n          results = _context3.sent;\r\n          return _context3.abrupt(\"return\", results.flat().filter(function (theme) {\r\n            return theme !== undefined;\r\n          }));\r\n        case 6:\r\n        case \"end\":\r\n          return _context3.stop();\r\n      }\r\n    }, _callee3);\r\n  }));\r\n  return function getThemeStyles(_x) {\r\n    return _ref.apply(this, arguments);\r\n  };\r\n}();\r\nexport default getThemeStyles;", "import { COLOR_MODE_ATTRIBUTE } from './constants';\r\nimport { darkModeMediaQuery } from './utils/theme-loading';\r\n\r\n/**\r\n * Provides a script that, when executed before paint, sets the `data-color-mode` attribute based on the current system theme,\r\n * to enable SSR support for automatic theme switching, avoid a flash of un-themed content on first paint.\r\n *\r\n * @param {string} colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\r\n *\r\n * @returns {string} A string to be added to the innerHTML of a script tag in the document head\r\n */\r\nvar getSSRAutoScript = function getSSRAutoScript(colorMode) {\r\n  return colorMode === 'auto' ? \"(\\n  () => {\\n    try {\\n      const mql = window.matchMedia('\".concat(darkModeMediaQuery, \"');\\n      const colorMode = mql.matches ? 'dark' : 'light';\\n      document.documentElement.setAttribute('\").concat(COLOR_MODE_ATTRIBUTE, \"', colorMode);\\n    } catch (e) {}\\n  }\\n)()\") : undefined;\r\n};\r\nexport default getSSRAutoScript;", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\r\nimport { useEffect, useState } from 'react';\r\nimport getGlobalTheme from './get-global-theme';\r\nimport ThemeMutationObserver from './theme-mutation-observer';\r\n\r\n/**\r\n * A React hook which returns the current themes and color-mode set on `<html>`.\r\n *\r\n * @example\r\n * ```\r\n * const { colorMode, dark, light, spacing, typography } = useThemeObserver();\r\n *\r\n * // Performing side effects when it changes\r\n * useEffect(() => {\r\n *   console.log(`The color mode has changed to ${theme.colorMode}`);\r\n * }, [theme.colorMode]);\r\n * ```\r\n */\r\nvar useThemeObserver = function useThemeObserver() {\r\n  var _useState = useState(getGlobalTheme()),\r\n    _useState2 = _slicedToArray(_useState, 2),\r\n    theme = _useState2[0],\r\n    setTheme = _useState2[1];\r\n  useEffect(function () {\r\n    var observer = new ThemeMutationObserver(function (theme) {\r\n      return setTheme(theme);\r\n    });\r\n    observer.observe();\r\n    return function () {\r\n      return observer.disconnect();\r\n    };\r\n  }, []);\r\n  return theme;\r\n};\r\nexport default useThemeObserver;", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\r\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\r\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\r\nimport { COLOR_MODE_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from './constants';\r\nimport { themeColorModes } from './theme-config';\r\nimport { themeStringToObject } from './theme-state-transformer';\r\nvar isThemeColorMode = function isThemeColorMode(colorMode) {\r\n  return themeColorModes.find(function (mode) {\r\n    return mode === colorMode;\r\n  }) !== undefined;\r\n};\r\nvar getGlobalTheme = function getGlobalTheme() {\r\n  if (typeof document === 'undefined') {\r\n    return {};\r\n  }\r\n  var element = document.documentElement;\r\n  var colorMode = element.getAttribute(COLOR_MODE_ATTRIBUTE) || '';\r\n  var theme = element.getAttribute(THEME_DATA_ATTRIBUTE) || '';\r\n  return _objectSpread(_objectSpread({}, themeStringToObject(theme)), isThemeColorMode(colorMode) && {\r\n    colorMode: colorMode\r\n  });\r\n};\r\nexport default getGlobalTheme;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\r\nimport _createClass from \"@babel/runtime/helpers/createClass\";\r\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\r\nimport { COLOR_MODE_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from './constants';\r\nimport getGlobalTheme from './get-global-theme';\r\n/**\r\n * A MutationObserver which watches the `<html>` element for changes to the theme.\r\n *\r\n * In React, use the {@link useThemeObserver `useThemeObserver`} hook instead.\r\n *\r\n * @param {function} callback - A callback function which fires when the theme changes.\r\n *\r\n * @example\r\n * ```\r\n * const observer = new ThemeMutationObserver((theme) => {});\r\n * observer.observe();\r\n * ```\r\n */\r\nvar ThemeMutationObserver = /*#__PURE__*/function () {\r\n  function ThemeMutationObserver(callback) {\r\n    _classCallCheck(this, ThemeMutationObserver);\r\n    _defineProperty(this, \"observer\", null);\r\n    _defineProperty(this, \"mediaObserver\", null);\r\n    this.callback = callback;\r\n  }\r\n  _createClass(ThemeMutationObserver, [{\r\n    key: \"observe\",\r\n    value: function observe() {\r\n      var _this = this;\r\n      if (!this.observer) {\r\n        this.observer = new MutationObserver(function () {\r\n          _this.callback(getGlobalTheme());\r\n        });\r\n      }\r\n      this.observer.observe(document.documentElement, {\r\n        attributeFilter: [THEME_DATA_ATTRIBUTE, COLOR_MODE_ATTRIBUTE]\r\n      });\r\n    }\r\n  }, {\r\n    key: \"disconnect\",\r\n    value: function disconnect() {\r\n      this.observer && this.observer.disconnect();\r\n    }\r\n  }]);\r\n  return ThemeMutationObserver;\r\n}();\r\nexport { ThemeMutationObserver as default };"],
  "mappings": "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",
  "names": ["_typeof", "o", "_typeof", "_regeneratorRuntime", "t", "e", "r", "define", "n", "i", "a", "c", "o", "u", "h", "p", "token", "name", "version", "token", "import_regenerator", "isThemeKind", "isThemeIds", "isColorMode", "themeStringToObject", "_ref", "_ref2", "themeObjectToString", "getThemeHtmlAttrs", "_ref", "dark", "light", "shape", "spacing", "typography", "_ref", "_regeneratorRuntime", "loadAndAppendThemeCss", "loadThemeCss", "ColorModeObserver", "_bind", "_ref", "_ref2", "debug", "name", "getThemePreferences", "dark", "light", "shape", "spacing", "typography", "getThemeOverridePreferences", "F", "_ref", "_regeneratorRuntime", "_ref2", "dark", "light", "shape", "spacing", "typography", "themeId", "setGlobalTheme", "enableGlobalTheme", "_ref", "dark", "light", "shape", "spacing", "typography", "import_regenerator", "_ref", "_regeneratorRuntime", "_ref2", "getThemeStyles", "getSSRAutoScript", "r", "isThemeColorMode", "getGlobalTheme", "ThemeMutationObserver", "useThemeObserver", "theme"]
}
